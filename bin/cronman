#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# Cron Manager for NanoHome - manage switches with crontab
#/////////////////////////////////////////////////////////////////////////////////////

# Catch Parameters
device="$2"
day="$3"
on="$4"
off="$5"

# Load config
. INSTALLDIR/config.cfg


# Device Support
if [[ ! "$device" == "all" ]] && [[ ! "$device" == *"multiswitch"* ]]; then
	. $rootpath/dev_compatibility $device
fi


#Help functions
print_header () {
	
	echo "<font size='5' color='white'>Schaltuhr</font><font size='5' color='$2'> $1</font><br>"
	
}


print_cfg () {

	desc="$(cat $rootpath/devlist | grep $1 | cut -d: -f2 )"
	active_cronjobs="$(crontab -l | grep mosquitto | grep $1 | awk '!NF || !seen[$0]++')"

	if [ ! -z "$active_cronjobs" ]; then

		# Print Cronjob Details //////////////////////////////////////////////////
		while IFS= read -r line
		 do

			on_msg="ein"
			off_msg="aus"

			act_msg="aktiv"
			inact_msg="inaktiv"
			
			open_msg="auf"
			close_msg="zu"
			
			# Print Service State //////////////////////////////////////////////////

			dev_state_temp="$(printf '%s\n' "$line" | awk '{ printf $5 ": " $2 ":" $1 " | " $16 } ')"		
			dev_state="$(echo $dev_state_temp | \
						sed 's,^*: ,TÃ¤glich ,g' | \
						sed 's,^1: ,Montag ,g' | \
						sed 's,^2: ,Dienstag ,g' | \
						sed 's,^3: ,Mittwoch ,g' | \
						sed 's,^4: ,Donnerstag ,g' | \
						sed 's,^5: ,Freitag ,g' | \
						sed 's,^6: ,Samstag ,g' | \
						sed 's,^0: ,Sonntag ,g' | \
						sed 's,^6-7: ,Wochenende ,g' | \
						sed 's,^1-5: ,Werktags ,g' | \
						sed 's, | on, '"$on_msg"',g' | \
						sed 's, | off, '"$off_msg"',g' | \
						sed 's,| start,'"$act_msg"',g' | \
						sed 's,| stop,'"$inact_msg"',g' | \
						sed 's,| close,'"$close_msg"',g' | \
						sed 's,| open,'"$open_msg"',g')"

			echo -e "<font size='4'><font color='hotpink'>$desc</font><font color='white'>\t $dev_state</font>"		


		#done < <(printf '%s\n' "$active_cronjobs")
		done <<< "$active_cronjobs"

	else
	
		echo "<font size='4'><font color='hotpink'>$desc</font> - <font color='grey'>inaktiv</font></font>" 
	
	fi

}


#/////////////////////////////////////////////////////////////////////////////////////
# Add a new Cronjob
#/////////////////////////////////////////////////////////////////////////////////////
if [ "$1" = "add" ] && [ ! -z "$2" ] && [ ! -z "$3" ]; then

	if [ "$4" = "" ] && [ "$5" = "" ]; then
		
		statusmsg "Error" "red" "" "" "Das geht nicht" "white"
		exit 1

	fi

	# catch on/off time
	on_hour="${on:0:2}"
	if [ ${#on_hour} -lt 2 ]; then on_hour="0$on_hour"; fi
	on_min="${on:3:5}"
	if [ "$on_min" = "" ]; then on_min="00"; fi
	off_hour="${off:0:2}"
	if [ ${#off_hour} -lt 2 ]; then off_hour="0$off_hour"; fi
	off_min="${off:3:5}"
	if [ "$off_min" = "" ]; then off_min="00"; fi

	# Create Cronjob Entries
	if [ "$dev_type" = "roller" ] || [ "$dev_type" = "shutter" ]; then
	
		cron_on="$on_min $on_hour * * $day mosquitto_pub -h $mqtt_server -u $mqtt_system_user -P $mqtt_system_pass -t $control_topic -m open"
		cron_off="$off_min $off_hour * * $day mosquitto_pub -h $mqtt_server -u $mqtt_system_user -P $mqtt_system_pass -t $control_topic -m close"		
	
	elif [ "$dev_type" = "switch" ]; then

		cron_on="$on_min $on_hour * * $day mosquitto_pub -h $mqtt_server -u $mqtt_system_user -P $mqtt_system_pass -t $control_topic -m on"
		cron_off="$off_min $off_hour * * $day mosquitto_pub -h $mqtt_server -u $mqtt_system_user -P $mqtt_system_pass -t $control_topic -m off"
	
	else
	
		echo "Device not supported"
		exit 1

	fi

	# Insert Cronjob Entries
	if [ ! "$on" = "" ]; then
		(crontab -l ; echo "$cron_on") | crontab -
	fi

	if [ ! "$off" = "" ]; then
		(crontab -l ; echo "$cron_off") | crontab -
	fi
	
	# show cronjobs
	print_header "aktiviert" "#c0fcb"
	print_cfg "$device"


#/////////////////////////////////////////////////////////////////////////////////////
# Show Cronjob
#/////////////////////////////////////////////////////////////////////////////////////
elif [ "$1" = "show" ]; then

	if [ "$device" = "all" ]; then
		active="$(crontab -l | grep mosquitto | awk '{ printf $14"\n" }'  | awk '!NF || !seen[$0]++' | awk -F'/' '{print $2}')"
	else
		active="$(crontab -l | grep mosquitto | grep $device | awk '{ printf $14"\n" }'  | awk '!NF || !seen[$0]++' | awk -F'/' '{print $2}' )"
	fi

	if [ ! -z "$active" ]; then

		print_header "aktiv" "#c0fcb"
		
		while IFS= read -r line; do
	
			print_cfg "$line" 

		done <<< "$active"
	
	else

		if [ "$device" = "all" ]; then
		
			print_header "inaktiv" "grey"
			
		else
		
			print_header "inaktiv" "grey"
			print_cfg "$device"
			
		fi
	fi	
	

#/////////////////////////////////////////////////////////////////////////////////////
# Remove Cronjob
#/////////////////////////////////////////////////////////////////////////////////////
elif [ "$1" = "remove" ]; then

	crontab -l | grep -v "$device" | crontab -
	
	print_header "deaktiviert" "grey"
	print_cfg "$device"
	
else

	echo "--------------------------------------------------------------"
	echo "Usage: cronman show|add|remove device|all (on_time) (off_time)"
	echo "--------------------------------------------------------------"
	echo

	exit 1

fi
