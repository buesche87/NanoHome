#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# Standbykiller for NanoHome - sends OFF to topic if device falls below [W]
#/////////////////////////////////////////////////////////////////////////////////////

# Catch Parameters
device="$2"
maxpower="$3"
rootpath="INSTALLDIR"

# Device Support
if [ ! "$device" = "all" ]; then
	. $rootpath/dev_compatibility $device
fi

# Environment
svcname="standbykiller.$device.service"
svclocation="~/.config/systemd/user"
svcfile="$svclocation/$svcname"
svctemplate="$rootpath/templates/standbykiller.service.template"


#/////////////////////////////////////////////////////////////////////////////////////
# Print Standbykiller and their Cronjobs On Dashboard
#/////////////////////////////////////////////////////////////////////////////////////
printsvc () {

	svcname="$1"
	description="$( grep Description $svclocation/$svcname | cut -d= -f2 )"

	echo "<font size='4' color='hotpink'>$description</font>"

	if systemctl --user is-active $svcname ; then

		lastmsg="$(systemctl --user status $svcname | tail -5 | sort -r | grep '|' | cut -d'|' -f 2 )"

		echo ""
		echo "<font size='3'>Last Messages:</font>"
		echo "<font size='2'>$lastmsg</font>"
		echo ""

	fi

}

#/////////////////////////////////////////////////////////////////////////////////////
# Show Standbykiller
#/////////////////////////////////////////////////////////////////////////////////////
if [ "$1" = "show" ] && [ ! -z "$device" ]; then
	
	active="$( ls $svclocation | grep standbykiller )"

	if [ ! -z "$active" ]; then
		
		echo "<font size='5' color='white'>Standbykiller</font><br>"
		
		while IFS= read -r line
		do

			printsvc "$line"

		done <<< "$active"

	else

		statusmsg "Standbykiller" "white" " inaktiv" "grey" "Kein Standbykiller aktiv" "grey"

	fi

#/////////////////////////////////////////////////////////////////////////////////////
# Add Standbykiller
#/////////////////////////////////////////////////////////////////////////////////////
elif [ "$1" = "add" ] && [ ! -z "$device" ] && [ ! -z "$maxpower" ]; then

	# check if service exists
	if test -f "$svcfile"; then

		statusmsg "Standbykiller" "white" "" "" "Service exists" "white"
		printsvc "$svcname"

	# create new service
	else

		# Copy Service File from a template and modify it
		cp $svctemplate $svcfile

		sed -i "s/-dev/$device/" $svcfile
		sed -i "s/-sbpwr/$maxpower/" $svcfile

		# Enable and Start Service
		systemctl --user start $svcname
		systemctl --user enable $svcname

		# Print Multiswitch on Dashboard
		printsvc "$svcname"

	fi

#/////////////////////////////////////////////////////////////////////////////////////
# Remove Standbykiller
#/////////////////////////////////////////////////////////////////////////////////////
elif [ "$1" = "remove" ] && [ ! -z "$device" ]; then
	
	description="$( grep Description $svclocation/$svcname | cut -d= -f2 )"
	
	systemctl --user stop $svcname
	systemctl --user disable $svcname

	rm -r $svcfile
	
	statusmsg "Standbykiller" "white" " $description" "hotpink" " deaktiviert" "grey"

#/////////////////////////////////////////////////////////////////////////////////////
# Exit 1
#/////////////////////////////////////////////////////////////////////////////////////
else

	statusmsg "Error" "red" "" "" "Eingabe prÃ¼fen" "white"
	exit 1

fi
